/**
 * API Car plate - API Plaque immatriculation
 * Web Service which allows you to query the official database in real time by simply entering a license plate or a VIN. You allow your ecosystem to identify in one click the official data of a vehicle among the 80M license plates in France, Spain, Italy and Portugal.
 *
 * OpenAPI spec version: 1.0.0-oas3
 * Contact: contact@auto-ways.net
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api"
import { Configuration } from "./configuration"

const config: Configuration = {}

describe("CarInfoApi", () => {
  let instance: api.CarInfoApi
  beforeEach(function() {
    instance = new api.CarInfoApi(config)
  });

  test("getCarByPlateEs", () => {
    const token: string = "token_example"
    const plaque: string = "plaque_example"
    const outputLang: string = "outputLang_example"
    return expect(instance.getCarByPlateEs(token, plaque, outputLang, {})).resolves.toBe(null)
  })
  test("getCarByPlateFr", () => {
    const token: string = "token_example"
    const plaque: string = "plaque_example"
    const outputLang: string = "outputLang_example"
    return expect(instance.getCarByPlateFr(token, plaque, outputLang, {})).resolves.toBe(null)
  })
  test("getCarByPlateIt", () => {
    const token: string = "token_example"
    const plaque: string = "plaque_example"
    const outputLang: string = "outputLang_example"
    return expect(instance.getCarByPlateIt(token, plaque, outputLang, {})).resolves.toBe(null)
  })
  test("getCarByPlatePt", () => {
    const token: string = "token_example"
    const plaque: string = "plaque_example"
    const outputLang: string = "outputLang_example"
    return expect(instance.getCarByPlatePt(token, plaque, outputLang, {})).resolves.toBe(null)
  })
  test("getCarByVIN", () => {
    const token: string = "token_example"
    const vin: string = "vin_example"
    const outputLang: string = "outputLang_example"
    return expect(instance.getCarByVIN(token, vin, outputLang, {})).resolves.toBe(null)
  })
})

