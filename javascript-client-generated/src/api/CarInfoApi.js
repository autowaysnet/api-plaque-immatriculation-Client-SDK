/*
 * API Car plate - API Plaque immatriculation
 * Web Service which allows you to query the official database in real time by simply entering a license plate or a VIN. You allow your ecosystem to identify in one click the official data of a vehicle among the 80M license plates in France, Spain, Italy and Portugal.
 *
 * OpenAPI spec version: 1.0.0-oas3
 * Contact: contact@auto-ways.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";

/**
* CarInfo service.
* @module api/CarInfoApi
* @version 1.0.0-oas3
*/
export class CarInfoApi {

    /**
    * Constructs a new CarInfoApi. 
    * @alias module:api/CarInfoApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getCarByPlateEs operation.
     * @callback moduleapi/CarInfoApi~getCarByPlateEsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find car by plate  , country  (ES)
     * Return vehicle data from license plate
     * @param {String} token Your token, use your real token or request a free token for fee here https://auto-ways.net/demo 
     * @param {String} plaque car plate 
     * @param {Object} opts Optional parameters
     * @param {String} opts.outputLang Define the API output language (fr,en) (default to <.>)
     * @param {module:api/CarInfoApi~getCarByPlateEsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getCarByPlateEs(token, plaque, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling getCarByPlateEs");
      }
      // verify the required parameter 'plaque' is set
      if (plaque === undefined || plaque === null) {
        throw new Error("Missing the required parameter 'plaque' when calling getCarByPlateEs");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'token': token,'plaque': plaque,'output_lang': opts['outputLang']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/v1/es/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getCarByPlateFr operation.
     * @callback moduleapi/CarInfoApi~getCarByPlateFrCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find car by plate , country  (FR)
     * Return vehicle data from license plate
     * @param {String} token Your token, use your real token or request a free token for fee here https://auto-ways.net/demo 
     * @param {String} plaque car plate 
     * @param {Object} opts Optional parameters
     * @param {String} opts.outputLang Define the API output language (fr,en) (default to <.>)
     * @param {module:api/CarInfoApi~getCarByPlateFrCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getCarByPlateFr(token, plaque, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling getCarByPlateFr");
      }
      // verify the required parameter 'plaque' is set
      if (plaque === undefined || plaque === null) {
        throw new Error("Missing the required parameter 'plaque' when calling getCarByPlateFr");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'token': token,'plaque': plaque,'output_lang': opts['outputLang']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/v1/fr/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getCarByPlateIt operation.
     * @callback moduleapi/CarInfoApi~getCarByPlateItCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find car by plate  , country  (IT)
     * Return vehicle data from license plate
     * @param {String} token Your token, use your real token or request a free token for fee here https://auto-ways.net/demo 
     * @param {String} plaque car plate 
     * @param {Object} opts Optional parameters
     * @param {String} opts.outputLang Define the API output language (fr,en) (default to <.>)
     * @param {module:api/CarInfoApi~getCarByPlateItCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getCarByPlateIt(token, plaque, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling getCarByPlateIt");
      }
      // verify the required parameter 'plaque' is set
      if (plaque === undefined || plaque === null) {
        throw new Error("Missing the required parameter 'plaque' when calling getCarByPlateIt");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'token': token,'plaque': plaque,'output_lang': opts['outputLang']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/v1/it/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getCarByPlatePt operation.
     * @callback moduleapi/CarInfoApi~getCarByPlatePtCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find car by plate  , country  (PT)
     * Return vehicle data from license plate
     * @param {String} token Your token, use your real token or request a free token for fee here https://auto-ways.net/demo 
     * @param {String} plaque car plate 
     * @param {Object} opts Optional parameters
     * @param {String} opts.outputLang Define the API output language (fr,en) (default to <.>)
     * @param {module:api/CarInfoApi~getCarByPlatePtCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getCarByPlatePt(token, plaque, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling getCarByPlatePt");
      }
      // verify the required parameter 'plaque' is set
      if (plaque === undefined || plaque === null) {
        throw new Error("Missing the required parameter 'plaque' when calling getCarByPlatePt");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'token': token,'plaque': plaque,'output_lang': opts['outputLang']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/v1/pt/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getCarByVIN operation.
     * @callback moduleapi/CarInfoApi~getCarByVINCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find car by VIN
     * Return vehicle data from license plate
     * @param {String} token Your token, use your real token or request a free token for fee here https://auto-ways.net/demo 
     * @param {String} vin  Your VIN (Vehicle Identification Number)
     * @param {Object} opts Optional parameters
     * @param {String} opts.outputLang Define the API output language (fr,en) (default to <.>)
     * @param {module:api/CarInfoApi~getCarByVINCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getCarByVIN(token, vin, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling getCarByVIN");
      }
      // verify the required parameter 'vin' is set
      if (vin === undefined || vin === null) {
        throw new Error("Missing the required parameter 'vin' when calling getCarByVIN");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'token': token,'vin': vin,'output_lang': opts['outputLang']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/v1/vin/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}